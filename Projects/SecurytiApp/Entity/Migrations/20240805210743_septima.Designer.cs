// <auto-generated />
using System;
using Entity.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240805210743_septima")]
    partial class septima
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Model.Security.Modulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("created_by")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_by")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_by")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("modulo");
                });

            modelBuilder.Entity("Entity.Model.Security.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("created_by")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_by")
                        .HasColumnType("datetime2");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fecha_de_nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo_de_documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_by")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("personas");
                });

            modelBuilder.Entity("Entity.Model.Security.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("created_by")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_by")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_by")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Entity.Model.Security.Rol_Vista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Rol_VistaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("created_by")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_by")
                        .HasColumnType("datetime2");

                    b.Property<int>("rolId")
                        .HasColumnType("int");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_by")
                        .HasColumnType("datetime2");

                    b.Property<int>("vistaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Rol_VistaId");

                    b.HasIndex("rolId");

                    b.HasIndex("vistaId");

                    b.ToTable("Rol_Vista");
                });

            modelBuilder.Entity("Entity.Model.Security.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("created_by")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_by")
                        .HasColumnType("datetime2");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombre_de_usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("personaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_by")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("personaId");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("Entity.Model.Security.Usuario_rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("created_by")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_by")
                        .HasColumnType("datetime2");

                    b.Property<int>("rol_id")
                        .HasColumnType("int");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_by")
                        .HasColumnType("datetime2");

                    b.Property<int>("usuario_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("rol_id");

                    b.HasIndex("usuario_id");

                    b.ToTable("usuario_rol");
                });

            modelBuilder.Entity("Entity.Model.Security.Vista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("created_by")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deleted_by")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<int>("moduloId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ruta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updated_by")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("moduloId");

                    b.ToTable("Vista");
                });

            modelBuilder.Entity("Entity.Model.Security.Rol_Vista", b =>
                {
                    b.HasOne("Entity.Model.Security.Rol_Vista", null)
                        .WithMany("rol_Vistas_rol")
                        .HasForeignKey("Rol_VistaId");

                    b.HasOne("Entity.Model.Security.Rol", "rol")
                        .WithMany("rol_Vistas_rol")
                        .HasForeignKey("rolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Model.Security.Vista", "vista")
                        .WithMany("rol_vista_vista")
                        .HasForeignKey("vistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rol");

                    b.Navigation("vista");
                });

            modelBuilder.Entity("Entity.Model.Security.Usuario", b =>
                {
                    b.HasOne("Entity.Model.Security.Persona", "persona")
                        .WithMany("Usuarios")
                        .HasForeignKey("personaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("persona");
                });

            modelBuilder.Entity("Entity.Model.Security.Usuario_rol", b =>
                {
                    b.HasOne("Entity.Model.Security.Rol", "rol")
                        .WithMany("rol_usuario_rol")
                        .HasForeignKey("rol_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Model.Security.Usuario", "usuario")
                        .WithMany("usuario_rol_usuario")
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rol");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Entity.Model.Security.Vista", b =>
                {
                    b.HasOne("Entity.Model.Security.Modulo", "modulo")
                        .WithMany("vistas")
                        .HasForeignKey("moduloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("modulo");
                });

            modelBuilder.Entity("Entity.Model.Security.Modulo", b =>
                {
                    b.Navigation("vistas");
                });

            modelBuilder.Entity("Entity.Model.Security.Persona", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Entity.Model.Security.Rol", b =>
                {
                    b.Navigation("rol_Vistas_rol");

                    b.Navigation("rol_usuario_rol");
                });

            modelBuilder.Entity("Entity.Model.Security.Rol_Vista", b =>
                {
                    b.Navigation("rol_Vistas_rol");
                });

            modelBuilder.Entity("Entity.Model.Security.Usuario", b =>
                {
                    b.Navigation("usuario_rol_usuario");
                });

            modelBuilder.Entity("Entity.Model.Security.Vista", b =>
                {
                    b.Navigation("rol_vista_vista");
                });
#pragma warning restore 612, 618
        }
    }
}
